{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MIN_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x3be6c98fba9483ce0245607351b0ffc06ced25fd4620f618804aea456810e65f",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "1025553",
        "logsBloom": "0x
        "blockHash": "0x8fb2696e6f66fdd31c8638350ddcfcd2b2a99041a1425637625476e4b45d8a16",
        "transactionHash": "0x3be6c98fba9483ce0245607351b0ffc06ced25fd4620f618804aea456810e65f",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "1025553",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "86927f97138152f32faa8777d0f578bc",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"@notice Demo only\",\"details\":\"price feed as a lib\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author\\n * @notice Demo only\\n * @dev price feed as a lib\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addToAmount;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender == i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MIN_USD,\\n            \\\"Did not send enough\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addToAmount[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex += 1\\n        ) {\\n            address funder = s_funders[funderIndex];\\n\\n            s_addToAmount[funder] = 0;\\n            s_funders = new address[](0);\\n            (bool callSuccess, ) = payable(msg.sender).call{\\n                value: address(this).balance\\n            }(\\\"\\\");\\n            require(callSuccess, \\\"Call failed\\\");\\n        }\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings cannot be in memmory\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex += 1\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addToAmount[funder] = 0;\\n            s_funders = new address[](0);\\n            (bool callSuccess, ) = payable(msg.sender).call{\\n                value: address(this).balance\\n            }(\\\"\\\");\\n            require(callSuccess, \\\"Call failed\\\");\\n        }\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmount(address funder) public view returns (uint256) {\\n        return s_addToAmount[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x9d2c3e08ac20bb9fef4f789fc63bce562424533c325d29bdf7429ed82a468b08\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 price = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (price * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x5f7fa19fad9319f6febac1307d9b33011265b3f2cec8c6905a88c1ecc827f764\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012af380380620012af833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111306200017f6000396000818161030301528181610547015261059701526111306000f3fe60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610130578063be2693f01461013a578063c0f8cffc14610151578063d7b4750c1461018e5761008e565b8063213dbea2146100985780633ccfd60b146100c3578063893d20e8146100da5780639e87a5cd146101055761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad6102f4565b6040516100ba9190610a67565b60405180910390f35b3480156100cf57600080fd5b506100d8610301565b005b3480156100e657600080fd5b506100ef610543565b6040516100fc9190610ac3565b60405180910390f35b34801561011157600080fd5b5061011a61056b565b6040516101279190610b3d565b60405180910390f35b6101386101cb565b005b34801561014657600080fd5b5061014f610595565b005b34801561015d57600080fd5b5061017860048036038101906101739190610b89565b61083b565b6040516101859190610a67565b60405180910390f35b34801561019a57600080fd5b506101b560048036038101906101b09190610be2565b610884565b6040516101c29190610ac3565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108cb90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c6c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610387576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105405760008082815481106103ac576103ab610c8c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600067ffffffffffffffff81111561043957610438610cbb565b5b6040519080825280602002602001820160405280156104675781602001602082028036833780820191505090505b506000908051906020019061047d9291906109a7565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a490610d1b565b60006040518083038185875af1925050503d80600081146104e1576040519150601f19603f3d011682016040523d82523d6000602084013e6104e6565b606091505b505090508061052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052190610d7c565b60405180910390fd5b50506001816105399190610dcb565b905061038a565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561061b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561069e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610654575b5050505050905060005b81518110156108375760008282815181106106c6576106c5610c8c565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600067ffffffffffffffff8111156107305761072f610cbb565b5b60405190808252806020026020018201604052801561075e5781602001602082028036833780820191505090505b50600090805190602001906107749291906109a7565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161079b90610d1b565b60006040518083038185875af1925050503d80600081146107d8576040519150601f19603f3d011682016040523d82523d6000602084013e6107dd565b606091505b5050905080610821576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081890610d7c565b60405180910390fd5b50506001816108309190610dcb565b90506106a8565b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061089957610898610c8c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d783610907565b90506000670de0b6b3a764000085836108f09190610e21565b6108fa9190610eaa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095057600080fd5b505afa158015610964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109889190610f68565b5050509150506402540be4008161099f9190610fe3565b915050919050565b828054828255906000526020600020908101928215610a20579160200282015b82811115610a1f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c7565b5b509050610a2d9190610a31565b5090565b5b80821115610a4a576000816000905550600101610a32565b5090565b6000819050919050565b610a6181610a4e565b82525050565b6000602082019050610a7c6000830184610a58565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aad82610a82565b9050919050565b610abd81610aa2565b82525050565b6000602082019050610ad86000830184610ab4565b92915050565b6000819050919050565b6000610b03610afe610af984610a82565b610ade565b610a82565b9050919050565b6000610b1582610ae8565b9050919050565b6000610b2782610b0a565b9050919050565b610b3781610b1c565b82525050565b6000602082019050610b526000830184610b2e565b92915050565b600080fd5b610b6681610aa2565b8114610b7157600080fd5b50565b600081359050610b8381610b5d565b92915050565b600060208284031215610b9f57610b9e610b58565b5b6000610bad84828501610b74565b91505092915050565b610bbf81610a4e565b8114610bca57600080fd5b50565b600081359050610bdc81610bb6565b92915050565b600060208284031215610bf857610bf7610b58565b5b6000610c0684828501610bcd565b91505092915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676800000000000000000000000000600082015250565b6000610c56601383610c0f565b9150610c6182610c20565b602082019050919050565b60006020820190508181036000830152610c8581610c49565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d05600083610cea565b9150610d1082610cf5565b600082019050919050565b6000610d2682610cf8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d66600b83610c0f565b9150610d7182610d30565b602082019050919050565b60006020820190508181036000830152610d9581610d59565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dd682610a4e565b9150610de183610a4e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e1657610e15610d9c565b5b828201905092915050565b6000610e2c82610a4e565b9150610e3783610a4e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e7057610e6f610d9c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eb582610a4e565b9150610ec083610a4e565b925082610ed057610ecf610e7b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610efa81610edb565b8114610f0557600080fd5b50565b600081519050610f1781610ef1565b92915050565b6000819050919050565b610f3081610f1d565b8114610f3b57600080fd5b50565b600081519050610f4d81610f27565b92915050565b600081519050610f6281610bb6565b92915050565b600080600080600060a08688031215610f8457610f83610b58565b5b6000610f9288828901610f08565b9550506020610fa388828901610f3e565b9450506040610fb488828901610f53565b9350506060610fc588828901610f53565b9250506080610fd688828901610f08565b9150509295509295909350565b6000610fee82610f1d565b9150610ff983610f1d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561103857611037610d9c565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561107557611074610d9c565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110b2576110b1610d9c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110ef576110ee610d9c565b5b82820290509291505056fea264697066735822122021320ff749f8b04ec4366a90716fe06f1ef504b550ca87a33224d34b9a6e124464736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610130578063be2693f01461013a578063c0f8cffc14610151578063d7b4750c1461018e5761008e565b8063213dbea2146100985780633ccfd60b146100c3578063893d20e8146100da5780639e87a5cd146101055761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad6102f4565b6040516100ba9190610a67565b60405180910390f35b3480156100cf57600080fd5b506100d8610301565b005b3480156100e657600080fd5b506100ef610543565b6040516100fc9190610ac3565b60405180910390f35b34801561011157600080fd5b5061011a61056b565b6040516101279190610b3d565b60405180910390f35b6101386101cb565b005b34801561014657600080fd5b5061014f610595565b005b34801561015d57600080fd5b5061017860048036038101906101739190610b89565b61083b565b6040516101859190610a67565b60405180910390f35b34801561019a57600080fd5b506101b560048036038101906101b09190610be2565b610884565b6040516101c29190610ac3565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108cb90919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c6c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610387576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105405760008082815481106103ac576103ab610c8c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600067ffffffffffffffff81111561043957610438610cbb565b5b6040519080825280602002602001820160405280156104675781602001602082028036833780820191505090505b506000908051906020019061047d9291906109a7565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a490610d1b565b60006040518083038185875af1925050503d80600081146104e1576040519150601f19603f3d011682016040523d82523d6000602084013e6104e6565b606091505b505090508061052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052190610d7c565b60405180910390fd5b50506001816105399190610dcb565b905061038a565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561061b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561069e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610654575b5050505050905060005b81518110156108375760008282815181106106c6576106c5610c8c565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600067ffffffffffffffff8111156107305761072f610cbb565b5b60405190808252806020026020018201604052801561075e5781602001602082028036833780820191505090505b50600090805190602001906107749291906109a7565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161079b90610d1b565b60006040518083038185875af1925050503d80600081146107d8576040519150601f19603f3d011682016040523d82523d6000602084013e6107dd565b606091505b5050905080610821576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081890610d7c565b60405180910390fd5b50506001816108309190610dcb565b90506106a8565b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061089957610898610c8c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d783610907565b90506000670de0b6b3a764000085836108f09190610e21565b6108fa9190610eaa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095057600080fd5b505afa158015610964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109889190610f68565b5050509150506402540be4008161099f9190610fe3565b915050919050565b828054828255906000526020600020908101928215610a20579160200282015b82811115610a1f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c7565b5b509050610a2d9190610a31565b5090565b5b80821115610a4a576000816000905550600101610a32565b5090565b6000819050919050565b610a6181610a4e565b82525050565b6000602082019050610a7c6000830184610a58565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aad82610a82565b9050919050565b610abd81610aa2565b82525050565b6000602082019050610ad86000830184610ab4565b92915050565b6000819050919050565b6000610b03610afe610af984610a82565b610ade565b610a82565b9050919050565b6000610b1582610ae8565b9050919050565b6000610b2782610b0a565b9050919050565b610b3781610b1c565b82525050565b6000602082019050610b526000830184610b2e565b92915050565b600080fd5b610b6681610aa2565b8114610b7157600080fd5b50565b600081359050610b8381610b5d565b92915050565b600060208284031215610b9f57610b9e610b58565b5b6000610bad84828501610b74565b91505092915050565b610bbf81610a4e565b8114610bca57600080fd5b50565b600081359050610bdc81610bb6565b92915050565b600060208284031215610bf857610bf7610b58565b5b6000610c0684828501610bcd565b91505092915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676800000000000000000000000000600082015250565b6000610c56601383610c0f565b9150610c6182610c20565b602082019050919050565b60006020820190508181036000830152610c8581610c49565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d05600083610cea565b9150610d1082610cf5565b600082019050919050565b6000610d2682610cf8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d66600b83610c0f565b9150610d7182610d30565b602082019050919050565b60006020820190508181036000830152610d9581610d59565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dd682610a4e565b9150610de183610a4e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e1657610e15610d9c565b5b828201905092915050565b6000610e2c82610a4e565b9150610e3783610a4e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e7057610e6f610d9c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eb582610a4e565b9150610ec083610a4e565b925082610ed057610ecf610e7b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610efa81610edb565b8114610f0557600080fd5b50565b600081519050610f1781610ef1565b92915050565b6000819050919050565b610f3081610f1d565b8114610f3b57600080fd5b50565b600081519050610f4d81610f27565b92915050565b600081519050610f6281610bb6565b92915050565b600080600080600060a08688031215610f8457610f83610b58565b5b6000610f9288828901610f08565b9550506020610fa388828901610f3e565b9450506040610fb488828901610f53565b9350506060610fc588828901610f53565b9250506080610fd688828901610f08565b9150509295509295909350565b6000610fee82610f1d565b9150610ff983610f1d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561103857611037610d9c565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561107557611074610d9c565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110b2576110b1610d9c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110ef576110ee610d9c565b5b82820290509291505056fea264697066735822122021320ff749f8b04ec4366a90716fe06f1ef504b550ca87a33224d34b9a6e124464736f6c63430008080033",
    "devdoc": {
        "author": "@notice Demo only",
        "details": "price feed as a lib",
        "kind": "dev",
        "methods": {},
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 66,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addToAmount",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
