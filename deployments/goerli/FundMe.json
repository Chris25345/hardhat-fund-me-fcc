{
    "address": "0xC10e8FAE69552f1d25D3dd840194B011ca71c842",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MIN_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "addToAmount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "funders",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "i_owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "priceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x1637accb84addfd86e94aa9ba42a4a6223b275ae274f11b17faea438fbdb51c5",
    "receipt": {
        "to": null,
        "from": "0x01Fe32466204c670B5baEA7678fe00d5eA5fA89c",
        "contractAddress": "0xC10e8FAE69552f1d25D3dd840194B011ca71c842",
        "transactionIndex": 88,
        "gasUsed": "858634",
        "logsBloom": "0x
        "blockHash": "0xe9daff228d6a54748f76ab20ce7acc72aaf3409ed60c6387fb8ef076dd665796",
        "transactionHash": "0x1637accb84addfd86e94aa9ba42a4a6223b275ae274f11b17faea438fbdb51c5",
        "logs": [],
        "blockNumber": 7667262,
        "cumulativeGasUsed": "27430228",
        "status": 1,
        "byzantium": true
    },
    "args": ["0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"],
    "numDeployments": 1,
    "solcInputHash": "224050d4892931828dceaee723b3e42e",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public addToAmount;\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender == i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MIN_USD,\\n            \\\"Did not send enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        addToAmount[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex += 1\\n        ) {\\n            address funder = funders[funderIndex];\\n\\n            addToAmount[funder] = 0;\\n            funders = new address[](0);\\n            (bool callSuccess, ) = payable(msg.sender).call{\\n                value: address(this).balance\\n            }(\\\"\\\");\\n            require(callSuccess, \\\"Call failed\\\");\\n        }\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x0b7c4a2e142ae9880fbf71db6d4d0288bf48ff5736b36fc8dade6d5dd0296750\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 price = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (price * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x5f7fa19fad9319f6febac1307d9b33011265b3f2cec8c6905a88c1ecc827f764\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a060405234801561001057600080fd5b50604051610f8c380380610f8c83398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e27610165600039600081816102f901526105610152610e276000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80631b89a2041461008d578063213dbea2146100ca5780633ccfd60b146100f557610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107a8565b6102d2565b6040516100c191906107ee565b60405180910390f35b3480156100d657600080fd5b506100df6102ea565b6040516100ec91906107ee565b60405180910390f35b34801561010157600080fd5b5061010a6102f7565b005b34801561011857600080fd5b50610121610539565b60405161012e9190610868565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055f565b6040516101639190610892565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d9565b610583565b6040516101a09190610892565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c290919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610963565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561037d576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105365760008082815481106103a2576103a1610983565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600067ffffffffffffffff81111561042f5761042e6109b2565b5b60405190808252806020026020018201604052801561045d5781602001602082028036833780820191505090505b506000908051906020019061047392919061069e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049a90610a12565b60006040518083038185875af1925050503d80600081146104d7576040519150601f19603f3d011682016040523d82523d6000602084013e6104dc565b606091505b5050905080610520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051790610a73565b60405180910390fd5b505060018161052f9190610ac2565b9050610380565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105ce836105fe565b90506000670de0b6b3a764000085836105e79190610b18565b6105f19190610ba1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064757600080fd5b505afa15801561065b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067f9190610c5f565b5050509150506402540be400816106969190610cda565b915050919050565b828054828255906000526020600020908101928215610717579160200282015b828111156107165782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106be565b5b5090506107249190610728565b5090565b5b80821115610741576000816000905550600101610729565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107758261074a565b9050919050565b6107858161076a565b811461079057600080fd5b50565b6000813590506107a28161077c565b92915050565b6000602082840312156107be576107bd610745565b5b60006107cc84828501610793565b91505092915050565b6000819050919050565b6107e8816107d5565b82525050565b600060208201905061080360008301846107df565b92915050565b6000819050919050565b600061082e6108296108248461074a565b610809565b61074a565b9050919050565b600061084082610813565b9050919050565b600061085282610835565b9050919050565b61086281610847565b82525050565b600060208201905061087d6000830184610859565b92915050565b61088c8161076a565b82525050565b60006020820190506108a76000830184610883565b92915050565b6108b6816107d5565b81146108c157600080fd5b50565b6000813590506108d3816108ad565b92915050565b6000602082840312156108ef576108ee610745565b5b60006108fd848285016108c4565b91505092915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676800000000000000000000000000600082015250565b600061094d601383610906565b915061095882610917565b602082019050919050565b6000602082019050818103600083015261097c81610940565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109fc6000836109e1565b9150610a07826109ec565b600082019050919050565b6000610a1d826109ef565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a5d600b83610906565b9150610a6882610a27565b602082019050919050565b60006020820190508181036000830152610a8c81610a50565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610acd826107d5565b9150610ad8836107d5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b0d57610b0c610a93565b5b828201905092915050565b6000610b23826107d5565b9150610b2e836107d5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b6757610b66610a93565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bac826107d5565b9150610bb7836107d5565b925082610bc757610bc6610b72565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bf181610bd2565b8114610bfc57600080fd5b50565b600081519050610c0e81610be8565b92915050565b6000819050919050565b610c2781610c14565b8114610c3257600080fd5b50565b600081519050610c4481610c1e565b92915050565b600081519050610c59816108ad565b92915050565b600080600080600060a08688031215610c7b57610c7a610745565b5b6000610c8988828901610bff565b9550506020610c9a88828901610c35565b9450506040610cab88828901610c4a565b9350506060610cbc88828901610c4a565b9250506080610ccd88828901610bff565b9150509295509295909350565b6000610ce582610c14565b9150610cf083610c14565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d2f57610d2e610a93565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d6c57610d6b610a93565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610da957610da8610a93565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610de657610de5610a93565b5b82820290509291505056fea26469706673582212206ab32ecccfa2c00aac33747b0123be8b7338f7a1254437ddeb6a93d9da68acb864736f6c63430008080033",
    "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80631b89a2041461008d578063213dbea2146100ca5780633ccfd60b146100f557610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107a8565b6102d2565b6040516100c191906107ee565b60405180910390f35b3480156100d657600080fd5b506100df6102ea565b6040516100ec91906107ee565b60405180910390f35b34801561010157600080fd5b5061010a6102f7565b005b34801561011857600080fd5b50610121610539565b60405161012e9190610868565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055f565b6040516101639190610892565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d9565b610583565b6040516101a09190610892565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c290919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610963565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561037d576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105365760008082815481106103a2576103a1610983565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600067ffffffffffffffff81111561042f5761042e6109b2565b5b60405190808252806020026020018201604052801561045d5781602001602082028036833780820191505090505b506000908051906020019061047392919061069e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049a90610a12565b60006040518083038185875af1925050503d80600081146104d7576040519150601f19603f3d011682016040523d82523d6000602084013e6104dc565b606091505b5050905080610520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051790610a73565b60405180910390fd5b505060018161052f9190610ac2565b9050610380565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105ce836105fe565b90506000670de0b6b3a764000085836105e79190610b18565b6105f19190610ba1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064757600080fd5b505afa15801561065b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067f9190610c5f565b5050509150506402540be400816106969190610cda565b915050919050565b828054828255906000526020600020908101928215610717579160200282015b828111156107165782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106be565b5b5090506107249190610728565b5090565b5b80821115610741576000816000905550600101610729565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107758261074a565b9050919050565b6107858161076a565b811461079057600080fd5b50565b6000813590506107a28161077c565b92915050565b6000602082840312156107be576107bd610745565b5b60006107cc84828501610793565b91505092915050565b6000819050919050565b6107e8816107d5565b82525050565b600060208201905061080360008301846107df565b92915050565b6000819050919050565b600061082e6108296108248461074a565b610809565b61074a565b9050919050565b600061084082610813565b9050919050565b600061085282610835565b9050919050565b61086281610847565b82525050565b600060208201905061087d6000830184610859565b92915050565b61088c8161076a565b82525050565b60006020820190506108a76000830184610883565b92915050565b6108b6816107d5565b81146108c157600080fd5b50565b6000813590506108d3816108ad565b92915050565b6000602082840312156108ef576108ee610745565b5b60006108fd848285016108c4565b91505092915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676800000000000000000000000000600082015250565b600061094d601383610906565b915061095882610917565b602082019050919050565b6000602082019050818103600083015261097c81610940565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109fc6000836109e1565b9150610a07826109ec565b600082019050919050565b6000610a1d826109ef565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a5d600b83610906565b9150610a6882610a27565b602082019050919050565b60006020820190508181036000830152610a8c81610a50565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610acd826107d5565b9150610ad8836107d5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b0d57610b0c610a93565b5b828201905092915050565b6000610b23826107d5565b9150610b2e836107d5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b6757610b66610a93565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bac826107d5565b9150610bb7836107d5565b925082610bc757610bc6610b72565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bf181610bd2565b8114610bfc57600080fd5b50565b600081519050610c0e81610be8565b92915050565b6000819050919050565b610c2781610c14565b8114610c3257600080fd5b50565b600081519050610c4481610c1e565b92915050565b600081519050610c59816108ad565b92915050565b600080600080600060a08688031215610c7b57610c7a610745565b5b6000610c8988828901610bff565b9550506020610c9a88828901610c35565b9450506040610cab88828901610c4a565b9350506060610cbc88828901610c4a565b9250506080610ccd88828901610bff565b9150509295509295909350565b6000610ce582610c14565b9150610cf083610c14565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d2f57610d2e610a93565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d6c57610d6b610a93565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610da957610da8610a93565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610de657610de5610a93565b5b82820290509291505056fea26469706673582212206ab32ecccfa2c00aac33747b0123be8b7338f7a1254437ddeb6a93d9da68acb864736f6c63430008080033",
    "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 61,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 65,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "addToAmount",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 70,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
